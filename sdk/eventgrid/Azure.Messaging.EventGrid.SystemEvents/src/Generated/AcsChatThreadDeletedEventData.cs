// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The AcsChatThreadDeletedEventData. </summary>
    public partial class AcsChatThreadDeletedEventData : AcsChatThreadEventInThreadBaseProperties
    {
        /// <summary> Initializes a new instance of <see cref="AcsChatThreadDeletedEventData"/>. </summary>
        /// <param name="createTime"></param>
        /// <param name="deletedByCommunicationIdentifier"></param>
        /// <param name="deleteTime"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="deletedByCommunicationIdentifier"/> is null. </exception>
        internal AcsChatThreadDeletedEventData(DateTimeOffset createTime, CommunicationIdentifierModel deletedByCommunicationIdentifier, DateTimeOffset deleteTime) : base(createTime)
        {
            Argument.AssertNotNull(deletedByCommunicationIdentifier, nameof(deletedByCommunicationIdentifier));

            DeletedByCommunicationIdentifier = deletedByCommunicationIdentifier;
            DeleteTime = deleteTime;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatThreadDeletedEventData"/>. </summary>
        /// <param name="transactionId"></param>
        /// <param name="threadId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="createTime"></param>
        /// <param name="version"></param>
        /// <param name="deletedByCommunicationIdentifier"></param>
        /// <param name="deleteTime"></param>
        internal AcsChatThreadDeletedEventData(string transactionId, string threadId, IDictionary<string, BinaryData> serializedAdditionalRawData, DateTimeOffset createTime, long? version, CommunicationIdentifierModel deletedByCommunicationIdentifier, DateTimeOffset deleteTime) : base(transactionId, threadId, serializedAdditionalRawData, createTime, version)
        {
            DeletedByCommunicationIdentifier = deletedByCommunicationIdentifier;
            DeleteTime = deleteTime;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatThreadDeletedEventData"/> for deserialization. </summary>
        internal AcsChatThreadDeletedEventData()
        {
        }

        /// <summary> Gets the deleted by communication identifier. </summary>
        public CommunicationIdentifierModel DeletedByCommunicationIdentifier { get; }
        /// <summary> Gets the delete time. </summary>
        public DateTimeOffset DeleteTime { get; }
    }
}
