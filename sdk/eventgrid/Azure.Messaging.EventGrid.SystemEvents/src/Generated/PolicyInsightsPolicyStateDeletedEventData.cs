// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The PolicyInsightsPolicyStateDeletedEventData. </summary>
    public partial class PolicyInsightsPolicyStateDeletedEventData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PolicyInsightsPolicyStateDeletedEventData"/>. </summary>
        /// <param name="timestamp"></param>
        internal PolicyInsightsPolicyStateDeletedEventData(DateTimeOffset timestamp)
        {
            Timestamp = timestamp;
        }

        /// <summary> Initializes a new instance of <see cref="PolicyInsightsPolicyStateDeletedEventData"/>. </summary>
        /// <param name="timestamp"></param>
        /// <param name="policyAssignmentId"></param>
        /// <param name="policyDefinitionId"></param>
        /// <param name="policyDefinitionReferenceId"></param>
        /// <param name="complianceState"></param>
        /// <param name="subscriptionId"></param>
        /// <param name="complianceReasonCode"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PolicyInsightsPolicyStateDeletedEventData(DateTimeOffset timestamp, string policyAssignmentId, string policyDefinitionId, string policyDefinitionReferenceId, string complianceState, string subscriptionId, string complianceReasonCode, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Timestamp = timestamp;
            PolicyAssignmentId = policyAssignmentId;
            PolicyDefinitionId = policyDefinitionId;
            PolicyDefinitionReferenceId = policyDefinitionReferenceId;
            ComplianceState = complianceState;
            SubscriptionId = subscriptionId;
            ComplianceReasonCode = complianceReasonCode;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="PolicyInsightsPolicyStateDeletedEventData"/> for deserialization. </summary>
        internal PolicyInsightsPolicyStateDeletedEventData()
        {
        }

        /// <summary> Gets the timestamp. </summary>
        public DateTimeOffset Timestamp { get; }
        /// <summary> Gets the policy assignment id. </summary>
        public string PolicyAssignmentId { get; }
        /// <summary> Gets the policy definition id. </summary>
        public string PolicyDefinitionId { get; }
        /// <summary> Gets the policy definition reference id. </summary>
        public string PolicyDefinitionReferenceId { get; }
        /// <summary> Gets the compliance state. </summary>
        public string ComplianceState { get; }
        /// <summary> Gets the subscription id. </summary>
        public string SubscriptionId { get; }
        /// <summary> Gets the compliance reason code. </summary>
        public string ComplianceReasonCode { get; }
    }
}
