// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The EventHubCaptureFileCreatedEventData. </summary>
    public partial class EventHubCaptureFileCreatedEventData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EventHubCaptureFileCreatedEventData"/>. </summary>
        /// <param name="firstEnqueueTime"></param>
        /// <param name="lastEnqueueTime"></param>
        internal EventHubCaptureFileCreatedEventData(DateTimeOffset firstEnqueueTime, DateTimeOffset lastEnqueueTime)
        {
            FirstEnqueueTime = firstEnqueueTime;
            LastEnqueueTime = lastEnqueueTime;
        }

        /// <summary> Initializes a new instance of <see cref="EventHubCaptureFileCreatedEventData"/>. </summary>
        /// <param name="fileurl"></param>
        /// <param name="fileType"></param>
        /// <param name="partitionId"></param>
        /// <param name="sizeInBytes"></param>
        /// <param name="eventCount"></param>
        /// <param name="firstSequenceNumber"></param>
        /// <param name="lastSequenceNumber"></param>
        /// <param name="firstEnqueueTime"></param>
        /// <param name="lastEnqueueTime"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EventHubCaptureFileCreatedEventData(string fileurl, string fileType, string partitionId, int? sizeInBytes, int? eventCount, int? firstSequenceNumber, int? lastSequenceNumber, DateTimeOffset firstEnqueueTime, DateTimeOffset lastEnqueueTime, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Fileurl = fileurl;
            FileType = fileType;
            PartitionId = partitionId;
            SizeInBytes = sizeInBytes;
            EventCount = eventCount;
            FirstSequenceNumber = firstSequenceNumber;
            LastSequenceNumber = lastSequenceNumber;
            FirstEnqueueTime = firstEnqueueTime;
            LastEnqueueTime = lastEnqueueTime;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="EventHubCaptureFileCreatedEventData"/> for deserialization. </summary>
        internal EventHubCaptureFileCreatedEventData()
        {
        }

        /// <summary> Gets the fileurl. </summary>
        public string Fileurl { get; }
        /// <summary> Gets the file type. </summary>
        public string FileType { get; }
        /// <summary> Gets the partition id. </summary>
        public string PartitionId { get; }
        /// <summary> Gets the size in bytes. </summary>
        public int? SizeInBytes { get; }
        /// <summary> Gets the event count. </summary>
        public int? EventCount { get; }
        /// <summary> Gets the first sequence number. </summary>
        public int? FirstSequenceNumber { get; }
        /// <summary> Gets the last sequence number. </summary>
        public int? LastSequenceNumber { get; }
        /// <summary> Gets the first enqueue time. </summary>
        public DateTimeOffset FirstEnqueueTime { get; }
        /// <summary> Gets the last enqueue time. </summary>
        public DateTimeOffset LastEnqueueTime { get; }
    }
}
