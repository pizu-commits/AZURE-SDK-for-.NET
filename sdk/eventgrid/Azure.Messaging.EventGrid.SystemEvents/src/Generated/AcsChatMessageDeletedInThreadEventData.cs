// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The AcsChatMessageDeletedInThreadEventData. </summary>
    public partial class AcsChatMessageDeletedInThreadEventData : AcsChatMessageEventInThreadBaseProperties
    {
        /// <summary> Initializes a new instance of <see cref="AcsChatMessageDeletedInThreadEventData"/>. </summary>
        /// <param name="senderCommunicationIdentifier"></param>
        /// <param name="composeTime"></param>
        /// <param name="deleteTime"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="senderCommunicationIdentifier"/> is null. </exception>
        internal AcsChatMessageDeletedInThreadEventData(CommunicationIdentifierModel senderCommunicationIdentifier, DateTimeOffset composeTime, DateTimeOffset deleteTime) : base(senderCommunicationIdentifier, composeTime)
        {
            Argument.AssertNotNull(senderCommunicationIdentifier, nameof(senderCommunicationIdentifier));

            DeleteTime = deleteTime;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatMessageDeletedInThreadEventData"/>. </summary>
        /// <param name="transactionId"></param>
        /// <param name="threadId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="messageId"></param>
        /// <param name="senderCommunicationIdentifier"></param>
        /// <param name="senderDisplayName"></param>
        /// <param name="composeTime"></param>
        /// <param name="type"></param>
        /// <param name="version"></param>
        /// <param name="deleteTime"></param>
        internal AcsChatMessageDeletedInThreadEventData(string transactionId, string threadId, IDictionary<string, BinaryData> serializedAdditionalRawData, string messageId, CommunicationIdentifierModel senderCommunicationIdentifier, string senderDisplayName, DateTimeOffset composeTime, string type, long? version, DateTimeOffset deleteTime) : base(transactionId, threadId, serializedAdditionalRawData, messageId, senderCommunicationIdentifier, senderDisplayName, composeTime, type, version)
        {
            DeleteTime = deleteTime;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatMessageDeletedInThreadEventData"/> for deserialization. </summary>
        internal AcsChatMessageDeletedInThreadEventData()
        {
        }

        /// <summary> Gets the delete time. </summary>
        public DateTimeOffset DeleteTime { get; }
    }
}
