// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The AcsRouterJobClassificationFailedEventData. </summary>
    public partial class AcsRouterJobClassificationFailedEventData : AcsRouterJobEventData
    {
        /// <summary> Initializes a new instance of <see cref="AcsRouterJobClassificationFailedEventData"/>. </summary>
        /// <param name="labels"></param>
        /// <param name="tags"></param>
        /// <param name="errors"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="labels"/>, <paramref name="tags"/> or <paramref name="errors"/> is null. </exception>
        internal AcsRouterJobClassificationFailedEventData(IReadOnlyDictionary<string, string> labels, IReadOnlyDictionary<string, string> tags, IEnumerable<AcsRouterCommunicationError> errors) : base(labels, tags)
        {
            Argument.AssertNotNull(labels, nameof(labels));
            Argument.AssertNotNull(tags, nameof(tags));
            Argument.AssertNotNull(errors, nameof(errors));

            Errors = errors.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AcsRouterJobClassificationFailedEventData"/>. </summary>
        /// <param name="jobId"></param>
        /// <param name="channelReference"></param>
        /// <param name="channelId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="queueId"></param>
        /// <param name="labels"></param>
        /// <param name="tags"></param>
        /// <param name="classificationPolicyId"></param>
        /// <param name="errors"></param>
        internal AcsRouterJobClassificationFailedEventData(string jobId, string channelReference, string channelId, IDictionary<string, BinaryData> serializedAdditionalRawData, string queueId, IReadOnlyDictionary<string, string> labels, IReadOnlyDictionary<string, string> tags, string classificationPolicyId, IReadOnlyList<AcsRouterCommunicationError> errors) : base(jobId, channelReference, channelId, serializedAdditionalRawData, queueId, labels, tags)
        {
            ClassificationPolicyId = classificationPolicyId;
            Errors = errors;
        }

        /// <summary> Initializes a new instance of <see cref="AcsRouterJobClassificationFailedEventData"/> for deserialization. </summary>
        internal AcsRouterJobClassificationFailedEventData()
        {
        }

        /// <summary> Gets the classification policy id. </summary>
        public string ClassificationPolicyId { get; }
        /// <summary> Gets the errors. </summary>
        public IReadOnlyList<AcsRouterCommunicationError> Errors { get; }
    }
}
