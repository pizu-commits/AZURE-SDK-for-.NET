// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Messaging.EventGrid.SystemEvents
{
    /// <summary> The AcsChatThreadEventInThreadBaseProperties. </summary>
    public partial class AcsChatThreadEventInThreadBaseProperties : AcsChatEventInThreadBaseProperties
    {
        /// <summary> Initializes a new instance of <see cref="AcsChatThreadEventInThreadBaseProperties"/>. </summary>
        /// <param name="createTime"></param>
        internal AcsChatThreadEventInThreadBaseProperties(DateTimeOffset createTime)
        {
            CreateTime = createTime;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatThreadEventInThreadBaseProperties"/>. </summary>
        /// <param name="transactionId"></param>
        /// <param name="threadId"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="createTime"></param>
        /// <param name="version"></param>
        internal AcsChatThreadEventInThreadBaseProperties(string transactionId, string threadId, IDictionary<string, BinaryData> serializedAdditionalRawData, DateTimeOffset createTime, long? version) : base(transactionId, threadId, serializedAdditionalRawData)
        {
            CreateTime = createTime;
            Version = version;
        }

        /// <summary> Initializes a new instance of <see cref="AcsChatThreadEventInThreadBaseProperties"/> for deserialization. </summary>
        internal AcsChatThreadEventInThreadBaseProperties()
        {
        }

        /// <summary> Gets the create time. </summary>
        public DateTimeOffset CreateTime { get; }
        /// <summary> Gets the version. </summary>
        public long? Version { get; }
    }
}
