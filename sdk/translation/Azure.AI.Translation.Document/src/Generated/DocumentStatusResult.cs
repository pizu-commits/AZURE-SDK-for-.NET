// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;

namespace Azure.AI.Translation.Document
{
    /// <summary> The DocumentStatus. </summary>
    public partial class DocumentStatusResult
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DocumentStatusResult"/>. </summary>
        /// <param name="sourceDocumentUri"></param>
        /// <param name="createdOn"></param>
        /// <param name="lastModified"></param>
        /// <param name="status"></param>
        /// <param name="translatedToLanguageCode"></param>
        /// <param name="progress"></param>
        /// <param name="id"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceDocumentUri"/>, <paramref name="translatedToLanguageCode"/> or <paramref name="id"/> is null. </exception>
        internal DocumentStatusResult(Uri sourceDocumentUri, DateTimeOffset createdOn, DateTimeOffset lastModified, DocumentTranslationStatus status, string translatedToLanguageCode, float progress, string id)
        {
            Argument.AssertNotNull(sourceDocumentUri, nameof(sourceDocumentUri));
            Argument.AssertNotNull(translatedToLanguageCode, nameof(translatedToLanguageCode));
            Argument.AssertNotNull(id, nameof(id));

            SourceDocumentUri = sourceDocumentUri;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            TranslatedToLanguageCode = translatedToLanguageCode;
            Progress = progress;
            Id = id;
        }

        /// <summary> Initializes a new instance of <see cref="DocumentStatusResult"/>. </summary>
        /// <param name="translatedDocumentUri"></param>
        /// <param name="sourceDocumentUri"></param>
        /// <param name="createdOn"></param>
        /// <param name="lastModified"></param>
        /// <param name="status"></param>
        /// <param name="translatedToLanguageCode"></param>
        /// <param name="error"></param>
        /// <param name="progress"></param>
        /// <param name="id"></param>
        /// <param name="charactersCharged"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DocumentStatusResult(Uri translatedDocumentUri, Uri sourceDocumentUri, DateTimeOffset createdOn, DateTimeOffset lastModified, DocumentTranslationStatus status, string translatedToLanguageCode, JsonElement error, float progress, string id, long charactersCharged, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TranslatedDocumentUri = translatedDocumentUri;
            SourceDocumentUri = sourceDocumentUri;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            TranslatedToLanguageCode = translatedToLanguageCode;
            _error = error;
            Progress = progress;
            Id = id;
            CharactersCharged = charactersCharged;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DocumentStatusResult"/> for deserialization. </summary>
        internal DocumentStatusResult()
        {
        }
    }
}
