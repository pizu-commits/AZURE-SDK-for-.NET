// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ComputeFleet.Models
{
    /// <summary> The ComputeFleetVmssDataDisk. </summary>
    public partial class ComputeFleetVmssDataDisk
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ComputeFleetVmssDataDisk"/>. </summary>
        /// <param name="lun"></param>
        /// <param name="createOption"></param>
        public ComputeFleetVmssDataDisk(int lun, ComputeFleetDiskCreateOptionType createOption)
        {
            Lun = lun;
            CreateOption = createOption;
        }

        /// <summary> Initializes a new instance of <see cref="ComputeFleetVmssDataDisk"/>. </summary>
        /// <param name="name"></param>
        /// <param name="lun"></param>
        /// <param name="caching"></param>
        /// <param name="isWriteAcceleratorEnabled"></param>
        /// <param name="createOption"></param>
        /// <param name="diskSizeGB"></param>
        /// <param name="managedDisk"></param>
        /// <param name="diskIopsReadWrite"></param>
        /// <param name="diskMbpsReadWrite"></param>
        /// <param name="deleteOption"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ComputeFleetVmssDataDisk(string name, int lun, ComputeFleetCachingType? caching, bool? isWriteAcceleratorEnabled, ComputeFleetDiskCreateOptionType createOption, int? diskSizeGB, ComputeFleetVmssManagedDisk managedDisk, long? diskIopsReadWrite, long? diskMbpsReadWrite, ComputeFleetDiskDeleteOptionType? deleteOption, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Lun = lun;
            Caching = caching;
            IsWriteAcceleratorEnabled = isWriteAcceleratorEnabled;
            CreateOption = createOption;
            DiskSizeGB = diskSizeGB;
            ManagedDisk = managedDisk;
            DiskIopsReadWrite = diskIopsReadWrite;
            DiskMbpsReadWrite = diskMbpsReadWrite;
            DeleteOption = deleteOption;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ComputeFleetVmssDataDisk"/> for deserialization. </summary>
        internal ComputeFleetVmssDataDisk()
        {
        }

        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the lun. </summary>
        public int Lun { get; set; }
        /// <summary> Gets or sets the caching. </summary>
        public ComputeFleetCachingType? Caching { get; set; }
        /// <summary> Gets or sets the is write accelerator enabled. </summary>
        public bool? IsWriteAcceleratorEnabled { get; set; }
        /// <summary> Gets or sets the create option. </summary>
        public ComputeFleetDiskCreateOptionType CreateOption { get; set; }
        /// <summary> Gets or sets the disk size gb. </summary>
        public int? DiskSizeGB { get; set; }
        /// <summary> Gets or sets the managed disk. </summary>
        public ComputeFleetVmssManagedDisk ManagedDisk { get; set; }
        /// <summary> Gets or sets the disk iops read write. </summary>
        public long? DiskIopsReadWrite { get; set; }
        /// <summary> Gets or sets the disk mbps read write. </summary>
        public long? DiskMbpsReadWrite { get; set; }
        /// <summary> Gets or sets the delete option. </summary>
        public ComputeFleetDiskDeleteOptionType? DeleteOption { get; set; }
    }
}
