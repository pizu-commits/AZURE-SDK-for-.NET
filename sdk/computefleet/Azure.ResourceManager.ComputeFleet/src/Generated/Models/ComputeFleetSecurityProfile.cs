// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ComputeFleet.Models
{
    /// <summary> The ComputeFleetSecurityProfile. </summary>
    public partial class ComputeFleetSecurityProfile
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ComputeFleetSecurityProfile"/>. </summary>
        public ComputeFleetSecurityProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ComputeFleetSecurityProfile"/>. </summary>
        /// <param name="uefiSettings"></param>
        /// <param name="isEncryptionAtHostEnabled"></param>
        /// <param name="securityType"></param>
        /// <param name="encryptionIdentity"></param>
        /// <param name="proxyAgentSettings"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ComputeFleetSecurityProfile(ComputeFleetUefiSettings uefiSettings, bool? isEncryptionAtHostEnabled, ComputeFleetSecurityType? securityType, ComputeFleetEncryptionIdentity encryptionIdentity, ComputeFleetProxyAgentSettings proxyAgentSettings, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            UefiSettings = uefiSettings;
            IsEncryptionAtHostEnabled = isEncryptionAtHostEnabled;
            SecurityType = securityType;
            EncryptionIdentity = encryptionIdentity;
            ProxyAgentSettings = proxyAgentSettings;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the uefi settings. </summary>
        public ComputeFleetUefiSettings UefiSettings { get; set; }
        /// <summary> Gets or sets the is encryption at host enabled. </summary>
        public bool? IsEncryptionAtHostEnabled { get; set; }
        /// <summary> Gets or sets the security type. </summary>
        public ComputeFleetSecurityType? SecurityType { get; set; }
        /// <summary> Gets or sets the encryption identity. </summary>
        internal ComputeFleetEncryptionIdentity EncryptionIdentity { get; set; }
        /// <summary> Gets or sets the user assigned identity resource id. </summary>
        public ResourceIdentifier UserAssignedIdentityResourceId
        {
            get => EncryptionIdentity is null ? default : EncryptionIdentity.UserAssignedIdentityResourceId;
            set
            {
                if (EncryptionIdentity is null)
                    EncryptionIdentity = new ComputeFleetEncryptionIdentity();
                EncryptionIdentity.UserAssignedIdentityResourceId = value;
            }
        }

        /// <summary> Gets or sets the proxy agent settings. </summary>
        public ComputeFleetProxyAgentSettings ProxyAgentSettings { get; set; }
    }
}
