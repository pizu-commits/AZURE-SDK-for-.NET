// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.JobRouter
{
    /// <summary> The PassThroughWorkerSelectorAttachment. </summary>
    public partial class PassThroughWorkerSelectorAttachment : WorkerSelectorAttachment
    {
        /// <summary> Initializes a new instance of <see cref="PassThroughWorkerSelectorAttachment"/>. </summary>
        /// <param name="key"></param>
        /// <param name="labelOperator"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="key"/> is null. </exception>
        internal PassThroughWorkerSelectorAttachment(string key, LabelOperator labelOperator)
        {
            Argument.AssertNotNull(key, nameof(key));

            Kind = WorkerSelectorAttachmentKind.PassThrough;
            Key = key;
            LabelOperator = labelOperator;
        }

        /// <summary> Initializes a new instance of <see cref="PassThroughWorkerSelectorAttachment"/>. </summary>
        /// <param name="kind"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="key"></param>
        /// <param name="labelOperator"></param>
        /// <param name="expiresAfter"></param>
        internal PassThroughWorkerSelectorAttachment(WorkerSelectorAttachmentKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, string key, LabelOperator labelOperator, TimeSpan? expiresAfter) : base(kind, serializedAdditionalRawData)
        {
            Key = key;
            LabelOperator = labelOperator;
            ExpiresAfter = expiresAfter;
        }

        /// <summary> Initializes a new instance of <see cref="PassThroughWorkerSelectorAttachment"/> for deserialization. </summary>
        internal PassThroughWorkerSelectorAttachment()
        {
        }

        /// <summary> Gets the key. </summary>
        public string Key { get; }
    }
}
