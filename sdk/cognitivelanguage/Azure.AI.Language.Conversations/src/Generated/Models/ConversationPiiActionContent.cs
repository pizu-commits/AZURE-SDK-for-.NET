// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The ConversationPiiActionContent. </summary>
    public partial class ConversationPiiActionContent
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ConversationPiiActionContent"/>. </summary>
        public ConversationPiiActionContent()
        {
            PiiCategories = new ChangeTrackingList<ConversationPiiCategories>();
            ExcludePiiCategories = new ChangeTrackingList<ConversationPiiCategoryExclusions>();
        }

        /// <summary> Initializes a new instance of <see cref="ConversationPiiActionContent"/>. </summary>
        /// <param name="loggingOptOut"></param>
        /// <param name="modelVersion"></param>
        /// <param name="piiCategories"></param>
        /// <param name="redactAudioTiming"></param>
        /// <param name="redactionSource"></param>
        /// <param name="redactionCharacter"></param>
        /// <param name="excludePiiCategories"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConversationPiiActionContent(bool? loggingOptOut, string modelVersion, IList<ConversationPiiCategories> piiCategories, bool? redactAudioTiming, TranscriptContentType? redactionSource, RedactionCharacter? redactionCharacter, IList<ConversationPiiCategoryExclusions> excludePiiCategories, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LoggingOptOut = loggingOptOut;
            ModelVersion = modelVersion;
            PiiCategories = piiCategories;
            RedactAudioTiming = redactAudioTiming;
            RedactionSource = redactionSource;
            RedactionCharacter = redactionCharacter;
            ExcludePiiCategories = excludePiiCategories;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the logging opt out. </summary>
        public bool? LoggingOptOut { get; set; }
        /// <summary> Gets or sets the model version. </summary>
        public string ModelVersion { get; set; }
        /// <summary> Gets the pii categories. </summary>
        public IList<ConversationPiiCategories> PiiCategories { get; }
        /// <summary> Gets or sets the redact audio timing. </summary>
        public bool? RedactAudioTiming { get; set; }
        /// <summary> Gets or sets the redaction source. </summary>
        public TranscriptContentType? RedactionSource { get; set; }
        /// <summary> Gets or sets the redaction character. </summary>
        public RedactionCharacter? RedactionCharacter { get; set; }
        /// <summary> Gets the exclude pii categories. </summary>
        public IList<ConversationPiiCategoryExclusions> ExcludePiiCategories { get; }
    }
}
