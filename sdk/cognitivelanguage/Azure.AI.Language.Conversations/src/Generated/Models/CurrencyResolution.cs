// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The CurrencyResolution. </summary>
    public partial class CurrencyResolution : ResolutionBase
    {
        /// <summary> Initializes a new instance of <see cref="CurrencyResolution"/>. </summary>
        /// <param name="value"></param>
        /// <param name="unit"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="unit"/> is null. </exception>
        internal CurrencyResolution(double value, string unit)
        {
            Argument.AssertNotNull(unit, nameof(unit));

            ResolutionKind = ResolutionKind.CurrencyResolution;
            Value = value;
            Unit = unit;
        }

        /// <summary> Initializes a new instance of <see cref="CurrencyResolution"/>. </summary>
        /// <param name="resolutionKind"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="iso4217"></param>
        /// <param name="value"></param>
        /// <param name="unit"></param>
        internal CurrencyResolution(ResolutionKind resolutionKind, IDictionary<string, BinaryData> serializedAdditionalRawData, string iso4217, double value, string unit) : base(resolutionKind, serializedAdditionalRawData)
        {
            Iso4217 = iso4217;
            Value = value;
            Unit = unit;
        }

        /// <summary> Initializes a new instance of <see cref="CurrencyResolution"/> for deserialization. </summary>
        internal CurrencyResolution()
        {
        }

        /// <summary> Gets the iso 4217. </summary>
        public string Iso4217 { get; }
        /// <summary> Gets the value. </summary>
        public double Value { get; }
        /// <summary> Gets the unit. </summary>
        public string Unit { get; }
    }
}
