// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The TranscriptConversation. </summary>
    public partial class TranscriptConversation : ConversationInput
    {
        /// <summary> Initializes a new instance of <see cref="TranscriptConversation"/>. </summary>
        /// <param name="id"></param>
        /// <param name="language"></param>
        /// <param name="conversationItems"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="language"/> or <paramref name="conversationItems"/> is null. </exception>
        public TranscriptConversation(string id, string language, IEnumerable<TranscriptConversationItem> conversationItems) : base(id, language)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(language, nameof(language));
            Argument.AssertNotNull(conversationItems, nameof(conversationItems));

            Modality = InputModality.Transcript;
            ConversationItems = conversationItems.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="TranscriptConversation"/>. </summary>
        /// <param name="id"></param>
        /// <param name="language"></param>
        /// <param name="modality"></param>
        /// <param name="domain"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="conversationItems"></param>
        internal TranscriptConversation(string id, string language, InputModality modality, ConversationDomain? domain, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<TranscriptConversationItem> conversationItems) : base(id, language, modality, domain, serializedAdditionalRawData)
        {
            ConversationItems = conversationItems;
        }

        /// <summary> Initializes a new instance of <see cref="TranscriptConversation"/> for deserialization. </summary>
        internal TranscriptConversation()
        {
        }

        /// <summary> Gets the conversation items. </summary>
        public IList<TranscriptConversationItem> ConversationItems { get; }
    }
}
