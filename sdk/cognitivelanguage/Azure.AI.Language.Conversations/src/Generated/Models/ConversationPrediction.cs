// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The ConversationPrediction. </summary>
    public partial class ConversationPrediction : PredictionBase
    {
        /// <summary> Initializes a new instance of <see cref="ConversationPrediction"/>. </summary>
        /// <param name="intents"></param>
        /// <param name="entities"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="intents"/> or <paramref name="entities"/> is null. </exception>
        internal ConversationPrediction(IEnumerable<ConversationIntent> intents, IEnumerable<ConversationEntity> entities)
        {
            Argument.AssertNotNull(intents, nameof(intents));
            Argument.AssertNotNull(entities, nameof(entities));

            ProjectKind = ProjectKind.Conversation;
            Intents = intents.ToList();
            Entities = entities.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ConversationPrediction"/>. </summary>
        /// <param name="projectKind"></param>
        /// <param name="topIntent"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="intents"></param>
        /// <param name="entities"></param>
        internal ConversationPrediction(ProjectKind projectKind, string topIntent, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyList<ConversationIntent> intents, IReadOnlyList<ConversationEntity> entities) : base(projectKind, topIntent, serializedAdditionalRawData)
        {
            Intents = intents;
            Entities = entities;
        }

        /// <summary> Initializes a new instance of <see cref="ConversationPrediction"/> for deserialization. </summary>
        internal ConversationPrediction()
        {
        }

        /// <summary> Gets the intents. </summary>
        public IReadOnlyList<ConversationIntent> Intents { get; }
        /// <summary> Gets the entities. </summary>
        public IReadOnlyList<ConversationEntity> Entities { get; }
    }
}
