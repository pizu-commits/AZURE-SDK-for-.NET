// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The ConversationRequestStatistics. </summary>
    public partial class ConversationRequestStatistics
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ConversationRequestStatistics"/>. </summary>
        /// <param name="documentsCount"></param>
        /// <param name="validDocumentsCount"></param>
        /// <param name="erroneousDocumentsCount"></param>
        /// <param name="transactionsCount"></param>
        /// <param name="conversationsCount"></param>
        /// <param name="validConversationsCount"></param>
        /// <param name="erroneousConversationsCount"></param>
        internal ConversationRequestStatistics(int documentsCount, int validDocumentsCount, int erroneousDocumentsCount, long transactionsCount, int conversationsCount, int validConversationsCount, int erroneousConversationsCount)
        {
            DocumentsCount = documentsCount;
            ValidDocumentsCount = validDocumentsCount;
            ErroneousDocumentsCount = erroneousDocumentsCount;
            TransactionsCount = transactionsCount;
            ConversationsCount = conversationsCount;
            ValidConversationsCount = validConversationsCount;
            ErroneousConversationsCount = erroneousConversationsCount;
        }

        /// <summary> Initializes a new instance of <see cref="ConversationRequestStatistics"/>. </summary>
        /// <param name="documentsCount"></param>
        /// <param name="validDocumentsCount"></param>
        /// <param name="erroneousDocumentsCount"></param>
        /// <param name="transactionsCount"></param>
        /// <param name="conversationsCount"></param>
        /// <param name="validConversationsCount"></param>
        /// <param name="erroneousConversationsCount"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConversationRequestStatistics(int documentsCount, int validDocumentsCount, int erroneousDocumentsCount, long transactionsCount, int conversationsCount, int validConversationsCount, int erroneousConversationsCount, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DocumentsCount = documentsCount;
            ValidDocumentsCount = validDocumentsCount;
            ErroneousDocumentsCount = erroneousDocumentsCount;
            TransactionsCount = transactionsCount;
            ConversationsCount = conversationsCount;
            ValidConversationsCount = validConversationsCount;
            ErroneousConversationsCount = erroneousConversationsCount;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ConversationRequestStatistics"/> for deserialization. </summary>
        internal ConversationRequestStatistics()
        {
        }

        /// <summary> Gets the documents count. </summary>
        public int DocumentsCount { get; }
        /// <summary> Gets the valid documents count. </summary>
        public int ValidDocumentsCount { get; }
        /// <summary> Gets the erroneous documents count. </summary>
        public int ErroneousDocumentsCount { get; }
        /// <summary> Gets the transactions count. </summary>
        public long TransactionsCount { get; }
        /// <summary> Gets the conversations count. </summary>
        public int ConversationsCount { get; }
        /// <summary> Gets the valid conversations count. </summary>
        public int ValidConversationsCount { get; }
        /// <summary> Gets the erroneous conversations count. </summary>
        public int ErroneousConversationsCount { get; }
    }
}
