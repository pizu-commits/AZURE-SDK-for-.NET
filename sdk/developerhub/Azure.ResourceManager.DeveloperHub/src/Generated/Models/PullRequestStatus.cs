// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DeveloperHub.Models
{
    /// <summary> The status of the Pull Request submitted against the users repository. </summary>
    public readonly partial struct PullRequestStatus : IEquatable<PullRequestStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PullRequestStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PullRequestStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "unknown";
        private const string SubmittedValue = "submitted";
        private const string MergedValue = "merged";
        private const string RemovedValue = "removed";

        /// <summary> Pull Request state unknown. </summary>
        public static PullRequestStatus Unknown { get; } = new PullRequestStatus(UnknownValue);
        /// <summary> Pull Request submitted to repository. </summary>
        public static PullRequestStatus Submitted { get; } = new PullRequestStatus(SubmittedValue);
        /// <summary> Pull Request merged into repository. </summary>
        public static PullRequestStatus Merged { get; } = new PullRequestStatus(MergedValue);
        /// <summary> Workflow no longer found within repository. </summary>
        public static PullRequestStatus Removed { get; } = new PullRequestStatus(RemovedValue);
        /// <summary> Determines if two <see cref="PullRequestStatus"/> values are the same. </summary>
        public static bool operator ==(PullRequestStatus left, PullRequestStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PullRequestStatus"/> values are not the same. </summary>
        public static bool operator !=(PullRequestStatus left, PullRequestStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="PullRequestStatus"/>. </summary>
        public static implicit operator PullRequestStatus(string value) => new PullRequestStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PullRequestStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PullRequestStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
