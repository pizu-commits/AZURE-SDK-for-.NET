// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.DeveloperHub.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableDeveloperHubResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDeveloperHubResourceGroupResource"/> class for mocking. </summary>
        protected MockableDeveloperHubResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDeveloperHubResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDeveloperHubResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of WorkflowResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of WorkflowResources and their operations over a WorkflowResource. </returns>
        public virtual WorkflowCollection GetWorkflows()
        {
            return GetCachedClient(client => new WorkflowCollection(client, Id));
        }

        /// <summary>
        /// Gets a workflow.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/{workflowName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Workflow_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-05-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="WorkflowResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="workflowName"> The name of the workflow resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="workflowName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="workflowName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<WorkflowResource>> GetWorkflowAsync(string workflowName, CancellationToken cancellationToken = default)
        {
            return await GetWorkflows().GetAsync(workflowName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a workflow.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/{workflowName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Workflow_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-05-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="WorkflowResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="workflowName"> The name of the workflow resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="workflowName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="workflowName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<WorkflowResource> GetWorkflow(string workflowName, CancellationToken cancellationToken = default)
        {
            return GetWorkflows().Get(workflowName, cancellationToken);
        }

        /// <summary> Gets a collection of IacProfileResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of IacProfileResources and their operations over a IacProfileResource. </returns>
        public virtual IacProfileCollection GetIacProfiles()
        {
            return GetCachedClient(client => new IacProfileCollection(client, Id));
        }

        /// <summary>
        /// Gets a IacProfile.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/iacProfiles/{iacProfileName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>IacProfiles_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-05-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="IacProfileResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="iacProfileName"> The name of the IacProfile. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="iacProfileName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="iacProfileName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<IacProfileResource>> GetIacProfileAsync(string iacProfileName, CancellationToken cancellationToken = default)
        {
            return await GetIacProfiles().GetAsync(iacProfileName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a IacProfile.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/iacProfiles/{iacProfileName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>IacProfiles_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-05-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="IacProfileResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="iacProfileName"> The name of the IacProfile. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="iacProfileName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="iacProfileName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<IacProfileResource> GetIacProfile(string iacProfileName, CancellationToken cancellationToken = default)
        {
            return GetIacProfiles().Get(iacProfileName, cancellationToken);
        }
    }
}
