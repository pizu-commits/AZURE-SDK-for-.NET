// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.DeveloperHub.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DeveloperHub
{
    /// <summary>
    /// A class representing the IacProfile data model.
    /// Resource representation of a IacProfile.
    /// </summary>
    public partial class IacProfileData : TrackedResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="IacProfileData"/>. </summary>
        /// <param name="location"> The location. </param>
        public IacProfileData(AzureLocation location) : base(location)
        {
            Stages = new ChangeTrackingList<StageProperties>();
            Templates = new ChangeTrackingList<IacTemplateProperties>();
        }

        /// <summary> Initializes a new instance of <see cref="IacProfileData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="stages"></param>
        /// <param name="templates"></param>
        /// <param name="storageAccountSubscription"> Terraform Storage Account Subscription. </param>
        /// <param name="storageAccountResourceGroup"> Terraform Storage Account Resource Group. </param>
        /// <param name="storageAccountName"> Terraform Storage Account Name. </param>
        /// <param name="storageContainerName"> Terraform Container Name. </param>
        /// <param name="repositoryName"> Repository Name. </param>
        /// <param name="repositoryMainBranch"> Repository Main Branch. </param>
        /// <param name="repositoryOwner"> Repository Owner. </param>
        /// <param name="authStatus"> Determines the authorization status of requests. </param>
        /// <param name="pullNumber"> The number associated with the submitted pull request. </param>
        /// <param name="prStatus"> The status of the Pull Request submitted against the users repository. </param>
        /// <param name="branchName"> Repository Branch Name. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal IacProfileData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ETag? etag, IList<StageProperties> stages, IList<IacTemplateProperties> templates, string storageAccountSubscription, string storageAccountResourceGroup, string storageAccountName, string storageContainerName, string repositoryName, string repositoryMainBranch, string repositoryOwner, AuthorizationStatus? authStatus, int? pullNumber, PullRequestStatus? prStatus, string branchName, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData, tags, location)
        {
            ETag = etag;
            Stages = stages;
            Templates = templates;
            StorageAccountSubscription = storageAccountSubscription;
            StorageAccountResourceGroup = storageAccountResourceGroup;
            StorageAccountName = storageAccountName;
            StorageContainerName = storageContainerName;
            RepositoryName = repositoryName;
            RepositoryMainBranch = repositoryMainBranch;
            RepositoryOwner = repositoryOwner;
            AuthStatus = authStatus;
            PullNumber = pullNumber;
            PrStatus = prStatus;
            BranchName = branchName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="IacProfileData"/> for deserialization. </summary>
        internal IacProfileData()
        {
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
        /// <summary> Gets the stages. </summary>
        public IList<StageProperties> Stages { get; }
        /// <summary> Gets the templates. </summary>
        public IList<IacTemplateProperties> Templates { get; }
        /// <summary> Terraform Storage Account Subscription. </summary>
        public string StorageAccountSubscription { get; set; }
        /// <summary> Terraform Storage Account Resource Group. </summary>
        public string StorageAccountResourceGroup { get; set; }
        /// <summary> Terraform Storage Account Name. </summary>
        public string StorageAccountName { get; set; }
        /// <summary> Terraform Container Name. </summary>
        public string StorageContainerName { get; set; }
        /// <summary> Repository Name. </summary>
        public string RepositoryName { get; set; }
        /// <summary> Repository Main Branch. </summary>
        public string RepositoryMainBranch { get; set; }
        /// <summary> Repository Owner. </summary>
        public string RepositoryOwner { get; set; }
        /// <summary> Determines the authorization status of requests. </summary>
        public AuthorizationStatus? AuthStatus { get; }
        /// <summary> The number associated with the submitted pull request. </summary>
        public int? PullNumber { get; }
        /// <summary> The status of the Pull Request submitted against the users repository. </summary>
        public PullRequestStatus? PrStatus { get; }
        /// <summary> Repository Branch Name. </summary>
        public string BranchName { get; set; }
    }
}
