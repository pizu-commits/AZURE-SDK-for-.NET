// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ComputeSchedule.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmComputeScheduleModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.DeallocateResourceOperationResult"/>. </summary>
        /// <param name="description"></param>
        /// <param name="resourceType"></param>
        /// <param name="location"></param>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.DeallocateResourceOperationResult"/> instance for mocking. </returns>
        public static DeallocateResourceOperationResult DeallocateResourceOperationResult(string description = null, string resourceType = null, AzureLocation location = default, IEnumerable<ResourceOperationResult> results = null)
        {
            results ??= new List<ResourceOperationResult>();

            return new DeallocateResourceOperationResult(description, resourceType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperationResult"/>. </summary>
        /// <param name="resourceId"></param>
        /// <param name="errorCode"></param>
        /// <param name="errorDetails"></param>
        /// <param name="operation"></param>
        /// <returns> A new <see cref="Models.ResourceOperationResult"/> instance for mocking. </returns>
        public static ResourceOperationResult ResourceOperationResult(ResourceIdentifier resourceId = null, string errorCode = null, string errorDetails = null, ResourceOperationDetails operation = null)
        {
            return new ResourceOperationResult(resourceId, errorCode, errorDetails, operation, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperationDetails"/>. </summary>
        /// <param name="operationId"></param>
        /// <param name="resourceId"></param>
        /// <param name="opType"></param>
        /// <param name="subscriptionId"></param>
        /// <param name="deadline"></param>
        /// <param name="deadlineType"></param>
        /// <param name="state"></param>
        /// <param name="timeZone"></param>
        /// <param name="resourceOperationError"></param>
        /// <param name="completedOn"></param>
        /// <param name="retryPolicy"></param>
        /// <returns> A new <see cref="Models.ResourceOperationDetails"/> instance for mocking. </returns>
        public static ResourceOperationDetails ResourceOperationDetails(string operationId = null, ResourceIdentifier resourceId = null, ResourceOperationType opType = default, string subscriptionId = null, DateTimeOffset deadline = default, ScheduledActionDeadlineType deadlineType = default, ScheduledActionOperationState state = default, string timeZone = null, ResourceOperationError resourceOperationError = null, DateTimeOffset? completedOn = null, UserRequestRetryPolicy retryPolicy = null)
        {
            return new ResourceOperationDetails(
                operationId,
                resourceId,
                opType,
                subscriptionId,
                deadline,
                deadlineType,
                state,
                timeZone,
                resourceOperationError,
                completedOn,
                retryPolicy,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperationError"/>. </summary>
        /// <param name="errorCode"></param>
        /// <param name="errorDetails"></param>
        /// <returns> A new <see cref="Models.ResourceOperationError"/> instance for mocking. </returns>
        public static ResourceOperationError ResourceOperationError(string errorCode = null, string errorDetails = null)
        {
            return new ResourceOperationError(errorCode, errorDetails, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.HibernateResourceOperationResult"/>. </summary>
        /// <param name="description"></param>
        /// <param name="resourceType"></param>
        /// <param name="location"></param>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.HibernateResourceOperationResult"/> instance for mocking. </returns>
        public static HibernateResourceOperationResult HibernateResourceOperationResult(string description = null, string resourceType = null, AzureLocation location = default, IEnumerable<ResourceOperationResult> results = null)
        {
            results ??= new List<ResourceOperationResult>();

            return new HibernateResourceOperationResult(description, resourceType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.StartResourceOperationResult"/>. </summary>
        /// <param name="description"></param>
        /// <param name="resourceType"></param>
        /// <param name="location"></param>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.StartResourceOperationResult"/> instance for mocking. </returns>
        public static StartResourceOperationResult StartResourceOperationResult(string description = null, string resourceType = null, AzureLocation location = default, IEnumerable<ResourceOperationResult> results = null)
        {
            results ??= new List<ResourceOperationResult>();

            return new StartResourceOperationResult(description, resourceType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.GetOperationStatusResult"/>. </summary>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.GetOperationStatusResult"/> instance for mocking. </returns>
        public static GetOperationStatusResult GetOperationStatusResult(IEnumerable<ResourceOperationResult> results = null)
        {
            results ??= new List<ResourceOperationResult>();

            return new GetOperationStatusResult(results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CancelOperationsResult"/>. </summary>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.CancelOperationsResult"/> instance for mocking. </returns>
        public static CancelOperationsResult CancelOperationsResult(IEnumerable<ResourceOperationResult> results = null)
        {
            results ??= new List<ResourceOperationResult>();

            return new CancelOperationsResult(results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.GetOperationErrorsResult"/>. </summary>
        /// <param name="results"></param>
        /// <returns> A new <see cref="Models.GetOperationErrorsResult"/> instance for mocking. </returns>
        public static GetOperationErrorsResult GetOperationErrorsResult(IEnumerable<OperationErrorsResult> results = null)
        {
            results ??= new List<OperationErrorsResult>();

            return new GetOperationErrorsResult(results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.OperationErrorsResult"/>. </summary>
        /// <param name="operationId"></param>
        /// <param name="createdOn"></param>
        /// <param name="activationOn"></param>
        /// <param name="completedOn"></param>
        /// <param name="operationErrors"></param>
        /// <param name="requestErrorCode"></param>
        /// <param name="requestErrorDetails"></param>
        /// <returns> A new <see cref="Models.OperationErrorsResult"/> instance for mocking. </returns>
        public static OperationErrorsResult OperationErrorsResult(string operationId = null, DateTimeOffset? createdOn = null, DateTimeOffset? activationOn = null, DateTimeOffset? completedOn = null, IEnumerable<OperationErrorDetails> operationErrors = null, string requestErrorCode = null, string requestErrorDetails = null)
        {
            operationErrors ??= new List<OperationErrorDetails>();

            return new OperationErrorsResult(
                operationId,
                createdOn,
                activationOn,
                completedOn,
                operationErrors?.ToList(),
                requestErrorCode,
                requestErrorDetails,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.OperationErrorDetails"/>. </summary>
        /// <param name="errorCode"></param>
        /// <param name="errorDetails"></param>
        /// <param name="timeStamp"></param>
        /// <param name="crpOperationId"></param>
        /// <returns> A new <see cref="Models.OperationErrorDetails"/> instance for mocking. </returns>
        public static OperationErrorDetails OperationErrorDetails(string errorCode = null, DateTimeOffset errorDetails = default, DateTimeOffset timeStamp = default, string crpOperationId = null)
        {
            return new OperationErrorDetails(errorCode, errorDetails, timeStamp, crpOperationId, serializedAdditionalRawData: null);
        }
    }
}
