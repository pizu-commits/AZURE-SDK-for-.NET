// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Inference
{
    /// <summary> The ChatRequestAssistantMessage. </summary>
    public partial class ChatRequestAssistantMessage : ChatRequestMessage
    {
        /// <summary> Initializes a new instance of <see cref="ChatRequestAssistantMessage"/>. </summary>
        public ChatRequestAssistantMessage()
        {
            Role = ChatRole.Assistant;
            ToolCalls = new ChangeTrackingList<ChatCompletionsToolCall>();
        }

        /// <summary> Initializes a new instance of <see cref="ChatRequestAssistantMessage"/>. </summary>
        /// <param name="role"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="content"></param>
        /// <param name="toolCalls">
        /// Please note <see cref="ChatCompletionsToolCall"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ChatCompletionsFunctionToolCall"/>.
        /// </param>
        internal ChatRequestAssistantMessage(ChatRole role, IDictionary<string, BinaryData> serializedAdditionalRawData, string content, IList<ChatCompletionsToolCall> toolCalls) : base(role, serializedAdditionalRawData)
        {
            Content = content;
            ToolCalls = toolCalls;
        }

        /// <summary> Gets or sets the content. </summary>
        public string Content { get; set; }
        /// <summary>
        /// Gets the tool calls
        /// Please note <see cref="ChatCompletionsToolCall"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ChatCompletionsFunctionToolCall"/>.
        /// </summary>
        public IList<ChatCompletionsToolCall> ToolCalls { get; }
    }
}
