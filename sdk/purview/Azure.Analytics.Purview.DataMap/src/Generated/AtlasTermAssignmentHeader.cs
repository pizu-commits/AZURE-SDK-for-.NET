// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.Purview.DataMap
{
    /// <summary> The AtlasTermAssignmentHeader. </summary>
    public partial class AtlasTermAssignmentHeader
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AtlasTermAssignmentHeader"/>. </summary>
        public AtlasTermAssignmentHeader()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AtlasTermAssignmentHeader"/>. </summary>
        /// <param name="confidence"></param>
        /// <param name="createdBy"></param>
        /// <param name="description"></param>
        /// <param name="displayText"></param>
        /// <param name="expression"></param>
        /// <param name="relationGuid"></param>
        /// <param name="status"></param>
        /// <param name="steward"></param>
        /// <param name="termGuid"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AtlasTermAssignmentHeader(int? confidence, string createdBy, string description, string displayText, string expression, Guid? relationGuid, AtlasTermAssignmentStatus? status, string steward, Guid? termGuid, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Confidence = confidence;
            CreatedBy = createdBy;
            Description = description;
            DisplayText = displayText;
            Expression = expression;
            RelationGuid = relationGuid;
            Status = status;
            Steward = steward;
            TermGuid = termGuid;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the confidence. </summary>
        public int? Confidence { get; set; }
        /// <summary> Gets or sets the created by. </summary>
        public string CreatedBy { get; set; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the display text. </summary>
        public string DisplayText { get; set; }
        /// <summary> Gets or sets the expression. </summary>
        public string Expression { get; set; }
        /// <summary> Gets or sets the relation guid. </summary>
        public Guid? RelationGuid { get; set; }
        /// <summary> Gets or sets the status. </summary>
        public AtlasTermAssignmentStatus? Status { get; set; }
        /// <summary> Gets or sets the steward. </summary>
        public string Steward { get; set; }
        /// <summary> Gets or sets the term guid. </summary>
        public Guid? TermGuid { get; set; }
    }
}
