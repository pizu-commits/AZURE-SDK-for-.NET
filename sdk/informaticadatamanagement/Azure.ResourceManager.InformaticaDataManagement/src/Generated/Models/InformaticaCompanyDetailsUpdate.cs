// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.InformaticaDataManagement.Models
{
    /// <summary> The InformaticaCompanyDetailsUpdate. </summary>
    public partial class InformaticaCompanyDetailsUpdate
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InformaticaCompanyDetailsUpdate"/>. </summary>
        public InformaticaCompanyDetailsUpdate()
        {
        }

        /// <summary> Initializes a new instance of <see cref="InformaticaCompanyDetailsUpdate"/>. </summary>
        /// <param name="companyName"></param>
        /// <param name="officeAddress"></param>
        /// <param name="country"></param>
        /// <param name="domain"></param>
        /// <param name="business"></param>
        /// <param name="numberOfEmployees"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InformaticaCompanyDetailsUpdate(string companyName, string officeAddress, string country, string domain, string business, int? numberOfEmployees, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CompanyName = companyName;
            OfficeAddress = officeAddress;
            Country = country;
            Domain = domain;
            Business = business;
            NumberOfEmployees = numberOfEmployees;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the company name. </summary>
        public string CompanyName { get; set; }
        /// <summary> Gets or sets the office address. </summary>
        public string OfficeAddress { get; set; }
        /// <summary> Gets or sets the country. </summary>
        public string Country { get; set; }
        /// <summary> Gets or sets the domain. </summary>
        public string Domain { get; set; }
        /// <summary> Gets or sets the business. </summary>
        public string Business { get; set; }
        /// <summary> Gets or sets the number of employees. </summary>
        public int? NumberOfEmployees { get; set; }
    }
}
