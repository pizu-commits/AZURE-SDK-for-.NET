// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.InformaticaDataManagement.Models
{
    /// <summary> The InformaticaServerlessRuntimeProperties. </summary>
    public partial class InformaticaServerlessRuntimeProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InformaticaServerlessRuntimeProperties"/>. </summary>
        /// <param name="serverlessAccountLocation"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="serverlessAccountLocation"/> is null. </exception>
        public InformaticaServerlessRuntimeProperties(string serverlessAccountLocation)
        {
            Argument.AssertNotNull(serverlessAccountLocation, nameof(serverlessAccountLocation));

            ServerlessAccountLocation = serverlessAccountLocation;
            AdvancedCustomProperties = new ChangeTrackingList<AdvancedCustomProperties>();
            ServerlessRuntimeTags = new ChangeTrackingList<ServerlessRuntimeTag>();
        }

        /// <summary> Initializes a new instance of <see cref="InformaticaServerlessRuntimeProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="description"></param>
        /// <param name="platform"></param>
        /// <param name="applicationType"></param>
        /// <param name="computeUnits"></param>
        /// <param name="executionTimeout"></param>
        /// <param name="serverlessAccountLocation"></param>
        /// <param name="serverlessRuntimeNetworkProfile"></param>
        /// <param name="advancedCustomProperties"></param>
        /// <param name="supplementaryFileLocation"></param>
        /// <param name="serverlessRuntimeConfig"></param>
        /// <param name="serverlessRuntimeTags"></param>
        /// <param name="serverlessRuntimeUserContextProperties"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InformaticaServerlessRuntimeProperties(InformaticaProvisioningState? provisioningState, string description, InformaticaPlatformType? platform, InformaticaApplicationType? applicationType, string computeUnits, string executionTimeout, string serverlessAccountLocation, ServerlessRuntimeNetworkProfile serverlessRuntimeNetworkProfile, IList<AdvancedCustomProperties> advancedCustomProperties, string supplementaryFileLocation, ServerlessRuntimeConfigProperties serverlessRuntimeConfig, IList<ServerlessRuntimeTag> serverlessRuntimeTags, ServerlessRuntimeUserContextProperties serverlessRuntimeUserContextProperties, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            Description = description;
            Platform = platform;
            ApplicationType = applicationType;
            ComputeUnits = computeUnits;
            ExecutionTimeout = executionTimeout;
            ServerlessAccountLocation = serverlessAccountLocation;
            ServerlessRuntimeNetworkProfile = serverlessRuntimeNetworkProfile;
            AdvancedCustomProperties = advancedCustomProperties;
            SupplementaryFileLocation = supplementaryFileLocation;
            ServerlessRuntimeConfig = serverlessRuntimeConfig;
            ServerlessRuntimeTags = serverlessRuntimeTags;
            ServerlessRuntimeUserContextProperties = serverlessRuntimeUserContextProperties;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="InformaticaServerlessRuntimeProperties"/> for deserialization. </summary>
        internal InformaticaServerlessRuntimeProperties()
        {
        }

        /// <summary> Gets the provisioning state. </summary>
        public InformaticaProvisioningState? ProvisioningState { get; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the platform. </summary>
        public InformaticaPlatformType? Platform { get; set; }
        /// <summary> Gets or sets the application type. </summary>
        public InformaticaApplicationType? ApplicationType { get; set; }
        /// <summary> Gets or sets the compute units. </summary>
        public string ComputeUnits { get; set; }
        /// <summary> Gets or sets the execution timeout. </summary>
        public string ExecutionTimeout { get; set; }
        /// <summary> Gets or sets the serverless account location. </summary>
        public string ServerlessAccountLocation { get; set; }
        /// <summary> Gets or sets the serverless runtime network profile. </summary>
        internal ServerlessRuntimeNetworkProfile ServerlessRuntimeNetworkProfile { get; set; }
        /// <summary> Gets or sets the network interface configuration. </summary>
        public InformaticaNetworkInterfaceConfiguration NetworkInterfaceConfiguration
        {
            get => ServerlessRuntimeNetworkProfile is null ? default : ServerlessRuntimeNetworkProfile.NetworkInterfaceConfiguration;
            set => ServerlessRuntimeNetworkProfile = new ServerlessRuntimeNetworkProfile(value);
        }

        /// <summary> Gets the advanced custom properties. </summary>
        public IList<AdvancedCustomProperties> AdvancedCustomProperties { get; }
        /// <summary> Gets or sets the supplementary file location. </summary>
        public string SupplementaryFileLocation { get; set; }
        /// <summary> Gets or sets the serverless runtime config. </summary>
        public ServerlessRuntimeConfigProperties ServerlessRuntimeConfig { get; set; }
        /// <summary> Gets the serverless runtime tags. </summary>
        public IList<ServerlessRuntimeTag> ServerlessRuntimeTags { get; }
        /// <summary> Gets or sets the serverless runtime user context properties. </summary>
        internal ServerlessRuntimeUserContextProperties ServerlessRuntimeUserContextProperties { get; set; }
        /// <summary> Gets or sets the user context token. </summary>
        public string UserContextToken
        {
            get => ServerlessRuntimeUserContextProperties is null ? default : ServerlessRuntimeUserContextProperties.UserContextToken;
            set => ServerlessRuntimeUserContextProperties = new ServerlessRuntimeUserContextProperties(value);
        }
    }
}
