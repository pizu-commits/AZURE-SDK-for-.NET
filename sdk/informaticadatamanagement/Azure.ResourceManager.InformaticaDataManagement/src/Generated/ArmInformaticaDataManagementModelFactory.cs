// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.InformaticaDataManagement.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmInformaticaDataManagementModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="InformaticaDataManagement.InformaticaServerlessRuntimeData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"></param>
        /// <returns> A new <see cref="InformaticaDataManagement.InformaticaServerlessRuntimeData"/> instance for mocking. </returns>
        public static InformaticaServerlessRuntimeData InformaticaServerlessRuntimeData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, InformaticaServerlessRuntimeProperties properties = null)
        {
            return new InformaticaServerlessRuntimeData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaServerlessRuntimeProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="description"></param>
        /// <param name="platform"></param>
        /// <param name="applicationType"></param>
        /// <param name="computeUnits"></param>
        /// <param name="executionTimeout"></param>
        /// <param name="serverlessAccountLocation"></param>
        /// <param name="networkInterfaceConfiguration"></param>
        /// <param name="advancedCustomProperties"></param>
        /// <param name="supplementaryFileLocation"></param>
        /// <param name="serverlessRuntimeConfig"></param>
        /// <param name="serverlessRuntimeTags"></param>
        /// <param name="userContextToken"></param>
        /// <returns> A new <see cref="Models.InformaticaServerlessRuntimeProperties"/> instance for mocking. </returns>
        public static InformaticaServerlessRuntimeProperties InformaticaServerlessRuntimeProperties(InformaticaProvisioningState? provisioningState = null, string description = null, InformaticaPlatformType? platform = null, InformaticaApplicationType? applicationType = null, string computeUnits = null, string executionTimeout = null, string serverlessAccountLocation = null, InformaticaNetworkInterfaceConfiguration networkInterfaceConfiguration = null, IEnumerable<AdvancedCustomProperties> advancedCustomProperties = null, string supplementaryFileLocation = null, ServerlessRuntimeConfigProperties serverlessRuntimeConfig = null, IEnumerable<ServerlessRuntimeTag> serverlessRuntimeTags = null, string userContextToken = null)
        {
            advancedCustomProperties ??= new List<AdvancedCustomProperties>();
            serverlessRuntimeTags ??= new List<ServerlessRuntimeTag>();

            return new InformaticaServerlessRuntimeProperties(
                provisioningState,
                description,
                platform,
                applicationType,
                computeUnits,
                executionTimeout,
                serverlessAccountLocation,
                networkInterfaceConfiguration != null ? new ServerlessRuntimeNetworkProfile(networkInterfaceConfiguration, serializedAdditionalRawData: null) : null,
                advancedCustomProperties?.ToList(),
                supplementaryFileLocation,
                serverlessRuntimeConfig,
                serverlessRuntimeTags?.ToList(),
                userContextToken != null ? new ServerlessRuntimeUserContextProperties(userContextToken, serializedAdditionalRawData: null) : null,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CheckDependenciesResult"/>. </summary>
        /// <param name="count"></param>
        /// <param name="id"></param>
        /// <param name="references"></param>
        /// <returns> A new <see cref="Models.CheckDependenciesResult"/> instance for mocking. </returns>
        public static CheckDependenciesResult CheckDependenciesResult(int count = default, string id = null, IEnumerable<ServerlessRuntimeDependency> references = null)
        {
            references ??= new List<ServerlessRuntimeDependency>();

            return new CheckDependenciesResult(count, id, references?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ServerlessRuntimeDependency"/>. </summary>
        /// <param name="id"></param>
        /// <param name="appContextId"></param>
        /// <param name="path"></param>
        /// <param name="documentType"></param>
        /// <param name="description"></param>
        /// <param name="lastUpdatedTime"></param>
        /// <returns> A new <see cref="Models.ServerlessRuntimeDependency"/> instance for mocking. </returns>
        public static ServerlessRuntimeDependency ServerlessRuntimeDependency(string id = null, string appContextId = null, string path = null, string documentType = null, string description = null, string lastUpdatedTime = null)
        {
            return new ServerlessRuntimeDependency(
                id,
                appContextId,
                path,
                documentType,
                description,
                lastUpdatedTime,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="InformaticaDataManagement.InformaticaOrganizationData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"></param>
        /// <returns> A new <see cref="InformaticaDataManagement.InformaticaOrganizationData"/> instance for mocking. </returns>
        public static InformaticaOrganizationData InformaticaOrganizationData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, InformaticaOrganizationProperties properties = null)
        {
            tags ??= new Dictionary<string, string>();

            return new InformaticaOrganizationData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaOrganizationProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="informaticaProperties"></param>
        /// <param name="marketplaceDetails"></param>
        /// <param name="userDetails"></param>
        /// <param name="companyDetails"></param>
        /// <param name="linkOrganizationToken"></param>
        /// <returns> A new <see cref="Models.InformaticaOrganizationProperties"/> instance for mocking. </returns>
        public static InformaticaOrganizationProperties InformaticaOrganizationProperties(InformaticaProvisioningState? provisioningState = null, InformaticaProperties informaticaProperties = null, InformaticaMarketplaceDetails marketplaceDetails = null, InformaticaUserDetails userDetails = null, InformaticaCompanyDetails companyDetails = null, string linkOrganizationToken = null)
        {
            return new InformaticaOrganizationProperties(
                provisioningState,
                informaticaProperties,
                marketplaceDetails,
                userDetails,
                companyDetails,
                linkOrganizationToken != null ? new LinkOrganization(linkOrganizationToken, serializedAdditionalRawData: null) : null,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ServerlessMetadataResponse"/>. </summary>
        /// <param name="runtimeType"></param>
        /// <param name="serverlessConfigProperties"></param>
        /// <param name="serverlessRuntimeConfigProperties"></param>
        /// <returns> A new <see cref="Models.ServerlessMetadataResponse"/> instance for mocking. </returns>
        public static ServerlessMetadataResponse ServerlessMetadataResponse(InformaticaRuntimeType? runtimeType = null, ServerlessConfigProperties serverlessConfigProperties = null, ServerlessRuntimeConfigProperties serverlessRuntimeConfigProperties = null)
        {
            return new ServerlessMetadataResponse(runtimeType, serverlessConfigProperties, serverlessRuntimeConfigProperties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ServerlessConfigProperties"/>. </summary>
        /// <param name="platform"></param>
        /// <param name="applicationTypes"></param>
        /// <param name="computeUnits"></param>
        /// <param name="executionTimeout"></param>
        /// <param name="regions"></param>
        /// <returns> A new <see cref="Models.ServerlessConfigProperties"/> instance for mocking. </returns>
        public static ServerlessConfigProperties ServerlessConfigProperties(InformaticaPlatformType? platform = null, IEnumerable<InformaticaApplicationTypeMetadata> applicationTypes = null, IEnumerable<ComputeUnitsMetadata> computeUnits = null, string executionTimeout = null, IEnumerable<InformaticaRegionsMetadata> regions = null)
        {
            applicationTypes ??= new List<InformaticaApplicationTypeMetadata>();
            computeUnits ??= new List<ComputeUnitsMetadata>();
            regions ??= new List<InformaticaRegionsMetadata>();

            return new ServerlessConfigProperties(
                platform,
                applicationTypes?.ToList(),
                computeUnits?.ToList(),
                executionTimeout,
                regions?.ToList(),
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaApplicationTypeMetadata"/>. </summary>
        /// <param name="name"></param>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.InformaticaApplicationTypeMetadata"/> instance for mocking. </returns>
        public static InformaticaApplicationTypeMetadata InformaticaApplicationTypeMetadata(string name = null, string value = null)
        {
            return new InformaticaApplicationTypeMetadata(name, value, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ComputeUnitsMetadata"/>. </summary>
        /// <param name="name"></param>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.ComputeUnitsMetadata"/> instance for mocking. </returns>
        public static ComputeUnitsMetadata ComputeUnitsMetadata(string name = null, IEnumerable<string> value = null)
        {
            value ??= new List<string>();

            return new ComputeUnitsMetadata(name, value?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaRegionsMetadata"/>. </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <returns> A new <see cref="Models.InformaticaRegionsMetadata"/> instance for mocking. </returns>
        public static InformaticaRegionsMetadata InformaticaRegionsMetadata(string id = null, string name = null)
        {
            return new InformaticaRegionsMetadata(id, name, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaServerlessRuntimeResourceList"/>. </summary>
        /// <param name="informaticaRuntimeResources"></param>
        /// <returns> A new <see cref="Models.InformaticaServerlessRuntimeResourceList"/> instance for mocking. </returns>
        public static InformaticaServerlessRuntimeResourceList InformaticaServerlessRuntimeResourceList(IEnumerable<InformaticaRuntimeResourceFetchMetadata> informaticaRuntimeResources = null)
        {
            informaticaRuntimeResources ??= new List<InformaticaRuntimeResourceFetchMetadata>();

            return new InformaticaServerlessRuntimeResourceList(informaticaRuntimeResources?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaRuntimeResourceFetchMetadata"/>. </summary>
        /// <param name="name"></param>
        /// <param name="createdTime"></param>
        /// <param name="updatedTime"></param>
        /// <param name="createdBy"></param>
        /// <param name="updatedBy"></param>
        /// <param name="id"></param>
        /// <param name="runtimeType"></param>
        /// <param name="status"></param>
        /// <param name="statusLocalized"></param>
        /// <param name="statusMessage"></param>
        /// <param name="serverlessConfigProperties"></param>
        /// <param name="description"></param>
        /// <returns> A new <see cref="Models.InformaticaRuntimeResourceFetchMetadata"/> instance for mocking. </returns>
        public static InformaticaRuntimeResourceFetchMetadata InformaticaRuntimeResourceFetchMetadata(string name = null, string createdTime = null, string updatedTime = null, string createdBy = null, string updatedBy = null, string id = null, InformaticaRuntimeType runtimeType = default, string status = null, string statusLocalized = null, string statusMessage = null, InformaticaServerlessFetchConfigProperties serverlessConfigProperties = null, string description = null)
        {
            return new InformaticaRuntimeResourceFetchMetadata(
                name,
                createdTime,
                updatedTime,
                createdBy,
                updatedBy,
                id,
                runtimeType,
                status,
                statusLocalized,
                statusMessage,
                serverlessConfigProperties,
                description,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InformaticaServerlessFetchConfigProperties"/>. </summary>
        /// <param name="subnet"></param>
        /// <param name="applicationType"></param>
        /// <param name="resourceGroupName"></param>
        /// <param name="advancedCustomProperties"></param>
        /// <param name="supplementaryFileLocation"></param>
        /// <param name="platform"></param>
        /// <param name="tags"></param>
        /// <param name="vnet"></param>
        /// <param name="executionTimeout"></param>
        /// <param name="computeUnits"></param>
        /// <param name="tenantId"></param>
        /// <param name="subscriptionId"></param>
        /// <param name="region"></param>
        /// <param name="serverlessArmResourceId"></param>
        /// <returns> A new <see cref="Models.InformaticaServerlessFetchConfigProperties"/> instance for mocking. </returns>
        public static InformaticaServerlessFetchConfigProperties InformaticaServerlessFetchConfigProperties(string subnet = null, string applicationType = null, string resourceGroupName = null, string advancedCustomProperties = null, string supplementaryFileLocation = null, string platform = null, string tags = null, string vnet = null, string executionTimeout = null, string computeUnits = null, Guid? tenantId = null, string subscriptionId = null, string region = null, ResourceIdentifier serverlessArmResourceId = null)
        {
            return new InformaticaServerlessFetchConfigProperties(
                subnet,
                applicationType,
                resourceGroupName,
                advancedCustomProperties,
                supplementaryFileLocation,
                platform,
                tags,
                vnet,
                executionTimeout,
                computeUnits,
                tenantId,
                subscriptionId,
                region,
                serverlessArmResourceId,
                serializedAdditionalRawData: null);
        }
    }
}
