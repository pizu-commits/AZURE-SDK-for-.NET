// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The Fhir_R4_ObservationComponent. </summary>
    public partial class FhirR4ObservationComponent : FhirR4Element
    {
        /// <summary> Initializes a new instance of <see cref="FhirR4ObservationComponent"/>. </summary>
        /// <param name="code"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="code"/> is null. </exception>
        internal FhirR4ObservationComponent(FhirR4CodeableConcept code)
        {
            Argument.AssertNotNull(code, nameof(code));

            Code = code;
            Interpretation = new ChangeTrackingList<FhirR4CodeableConcept>();
            ReferenceRange = new ChangeTrackingList<FhirR4ObservationReferenceRange>();
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4ObservationComponent"/>. </summary>
        /// <param name="id"></param>
        /// <param name="extension"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="code"></param>
        /// <param name="valueQuantity"></param>
        /// <param name="valueCodeableConcept"></param>
        /// <param name="valueString"></param>
        /// <param name="valueBoolean"></param>
        /// <param name="valueInteger"></param>
        /// <param name="valueRange"></param>
        /// <param name="valueRatio"></param>
        /// <param name="valueSampledData"></param>
        /// <param name="valueTime"></param>
        /// <param name="valueDateTime"></param>
        /// <param name="valuePeriod"></param>
        /// <param name="valueReference"></param>
        /// <param name="dataAbsentReason"></param>
        /// <param name="interpretation"></param>
        /// <param name="referenceRange"></param>
        internal FhirR4ObservationComponent(string id, IList<FhirR4Extension> extension, IDictionary<string, BinaryData> serializedAdditionalRawData, FhirR4CodeableConcept code, FhirR4Quantity valueQuantity, FhirR4CodeableConcept valueCodeableConcept, string valueString, bool? valueBoolean, int? valueInteger, FhirR4Range valueRange, FhirR4Ratio valueRatio, FhirR4SampledData valueSampledData, TimeSpan? valueTime, string valueDateTime, FhirR4Period valuePeriod, FhirR4Reference valueReference, FhirR4CodeableConcept dataAbsentReason, IReadOnlyList<FhirR4CodeableConcept> interpretation, IReadOnlyList<FhirR4ObservationReferenceRange> referenceRange) : base(id, extension, serializedAdditionalRawData)
        {
            Code = code;
            ValueQuantity = valueQuantity;
            ValueCodeableConcept = valueCodeableConcept;
            ValueString = valueString;
            ValueBoolean = valueBoolean;
            ValueInteger = valueInteger;
            ValueRange = valueRange;
            ValueRatio = valueRatio;
            ValueSampledData = valueSampledData;
            ValueTime = valueTime;
            ValueDateTime = valueDateTime;
            ValuePeriod = valuePeriod;
            ValueReference = valueReference;
            DataAbsentReason = dataAbsentReason;
            Interpretation = interpretation;
            ReferenceRange = referenceRange;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4ObservationComponent"/> for deserialization. </summary>
        internal FhirR4ObservationComponent()
        {
        }

        /// <summary> Gets the code. </summary>
        public FhirR4CodeableConcept Code { get; }
        /// <summary> Gets the value quantity. </summary>
        public FhirR4Quantity ValueQuantity { get; }
        /// <summary> Gets the value codeable concept. </summary>
        public FhirR4CodeableConcept ValueCodeableConcept { get; }
        /// <summary> Gets the value string. </summary>
        public string ValueString { get; }
        /// <summary> Gets the value boolean. </summary>
        public bool? ValueBoolean { get; }
        /// <summary> Gets the value integer. </summary>
        public int? ValueInteger { get; }
        /// <summary> Gets the value range. </summary>
        public FhirR4Range ValueRange { get; }
        /// <summary> Gets the value ratio. </summary>
        public FhirR4Ratio ValueRatio { get; }
        /// <summary> Gets the value sampled data. </summary>
        public FhirR4SampledData ValueSampledData { get; }
        /// <summary> Gets the value time. </summary>
        public TimeSpan? ValueTime { get; }
        /// <summary> Gets the value date time. </summary>
        public string ValueDateTime { get; }
        /// <summary> Gets the value period. </summary>
        public FhirR4Period ValuePeriod { get; }
        /// <summary> Gets the value reference. </summary>
        public FhirR4Reference ValueReference { get; }
        /// <summary> Gets the data absent reason. </summary>
        public FhirR4CodeableConcept DataAbsentReason { get; }
        /// <summary> Gets the interpretation. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> Interpretation { get; }
        /// <summary> Gets the reference range. </summary>
        public IReadOnlyList<FhirR4ObservationReferenceRange> ReferenceRange { get; }
    }
}
