// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The LimitedOrderDiscrepancyInference. </summary>
    public partial class LimitedOrderDiscrepancyInference : RadiologyInsightsInference
    {
        /// <summary> Initializes a new instance of <see cref="LimitedOrderDiscrepancyInference"/>. </summary>
        /// <param name="orderType"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="orderType"/> is null. </exception>
        internal LimitedOrderDiscrepancyInference(FhirR4CodeableConcept orderType)
        {
            Argument.AssertNotNull(orderType, nameof(orderType));

            Kind = RadiologyInsightsInferenceType.LimitedOrderDiscrepancy;
            OrderType = orderType;
            PresentBodyParts = new ChangeTrackingList<FhirR4CodeableConcept>();
            PresentBodyPartMeasurements = new ChangeTrackingList<FhirR4CodeableConcept>();
        }

        /// <summary> Initializes a new instance of <see cref="LimitedOrderDiscrepancyInference"/>. </summary>
        /// <param name="kind"></param>
        /// <param name="extension"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="orderType"></param>
        /// <param name="presentBodyParts"></param>
        /// <param name="presentBodyPartMeasurements"></param>
        internal LimitedOrderDiscrepancyInference(RadiologyInsightsInferenceType kind, IReadOnlyList<FhirR4Extension> extension, IDictionary<string, BinaryData> serializedAdditionalRawData, FhirR4CodeableConcept orderType, IReadOnlyList<FhirR4CodeableConcept> presentBodyParts, IReadOnlyList<FhirR4CodeableConcept> presentBodyPartMeasurements) : base(kind, extension, serializedAdditionalRawData)
        {
            OrderType = orderType;
            PresentBodyParts = presentBodyParts;
            PresentBodyPartMeasurements = presentBodyPartMeasurements;
        }

        /// <summary> Initializes a new instance of <see cref="LimitedOrderDiscrepancyInference"/> for deserialization. </summary>
        internal LimitedOrderDiscrepancyInference()
        {
        }

        /// <summary> Gets the order type. </summary>
        public FhirR4CodeableConcept OrderType { get; }
        /// <summary> Gets the present body parts. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> PresentBodyParts { get; }
        /// <summary> Gets the present body part measurements. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> PresentBodyPartMeasurements { get; }
    }
}
