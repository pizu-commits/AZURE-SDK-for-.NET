// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The Fhir_R4_Condition. </summary>
    public partial class FhirR4Condition : FhirR4DomainResource
    {
        /// <summary> Initializes a new instance of <see cref="FhirR4Condition"/>. </summary>
        internal FhirR4Condition() : base("Condition")
        {
            Identifier = new ChangeTrackingList<FhirR4Identifier>();
            Category = new ChangeTrackingList<FhirR4CodeableConcept>();
            BodySite = new ChangeTrackingList<FhirR4CodeableConcept>();
            Stage = new ChangeTrackingList<FhirR4ConditionStage>();
            Note = new ChangeTrackingList<FhirR4Annotation>();
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4Condition"/>. </summary>
        /// <param name="resourceType"></param>
        /// <param name="id"></param>
        /// <param name="meta"></param>
        /// <param name="implicitRules"></param>
        /// <param name="language"></param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="text"></param>
        /// <param name="contained"></param>
        /// <param name="extension"></param>
        /// <param name="modifierExtension"></param>
        /// <param name="identifier"></param>
        /// <param name="clinicalStatus"></param>
        /// <param name="verificationStatus"></param>
        /// <param name="category"></param>
        /// <param name="severity"></param>
        /// <param name="code"></param>
        /// <param name="bodySite"></param>
        /// <param name="encounter"></param>
        /// <param name="onsetDateTime"></param>
        /// <param name="onsetAge"></param>
        /// <param name="onsetPeriod"></param>
        /// <param name="onsetRange"></param>
        /// <param name="onsetString"></param>
        /// <param name="abatementDateTime"></param>
        /// <param name="abatementAge"></param>
        /// <param name="abatementPeriod"></param>
        /// <param name="abatementRange"></param>
        /// <param name="abatementString"></param>
        /// <param name="recordedDate"></param>
        /// <param name="stage"></param>
        /// <param name="note"></param>
        internal FhirR4Condition(string resourceType, string id, FhirR4Meta meta, string implicitRules, string language, IDictionary<string, BinaryData> additionalProperties, FhirR4Narrative text, IReadOnlyList<FhirR4Resource> contained, IReadOnlyList<FhirR4Extension> extension, IReadOnlyList<FhirR4Extension> modifierExtension, IReadOnlyList<FhirR4Identifier> identifier, FhirR4CodeableConcept clinicalStatus, FhirR4CodeableConcept verificationStatus, IReadOnlyList<FhirR4CodeableConcept> category, FhirR4CodeableConcept severity, FhirR4CodeableConcept code, IReadOnlyList<FhirR4CodeableConcept> bodySite, FhirR4Reference encounter, string onsetDateTime, FhirR4Quantity onsetAge, FhirR4Period onsetPeriod, FhirR4Range onsetRange, string onsetString, string abatementDateTime, FhirR4Quantity abatementAge, FhirR4Period abatementPeriod, FhirR4Range abatementRange, string abatementString, string recordedDate, IReadOnlyList<FhirR4ConditionStage> stage, IReadOnlyList<FhirR4Annotation> note) : base(resourceType, id, meta, implicitRules, language, additionalProperties, text, contained, extension, modifierExtension)
        {
            Identifier = identifier;
            ClinicalStatus = clinicalStatus;
            VerificationStatus = verificationStatus;
            Category = category;
            Severity = severity;
            Code = code;
            BodySite = bodySite;
            Encounter = encounter;
            OnsetDateTime = onsetDateTime;
            OnsetAge = onsetAge;
            OnsetPeriod = onsetPeriod;
            OnsetRange = onsetRange;
            OnsetString = onsetString;
            AbatementDateTime = abatementDateTime;
            AbatementAge = abatementAge;
            AbatementPeriod = abatementPeriod;
            AbatementRange = abatementRange;
            AbatementString = abatementString;
            RecordedDate = recordedDate;
            Stage = stage;
            Note = note;
        }

        /// <summary> Gets the identifier. </summary>
        public IReadOnlyList<FhirR4Identifier> Identifier { get; }
        /// <summary> Gets the clinical status. </summary>
        public FhirR4CodeableConcept ClinicalStatus { get; }
        /// <summary> Gets the verification status. </summary>
        public FhirR4CodeableConcept VerificationStatus { get; }
        /// <summary> Gets the category. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> Category { get; }
        /// <summary> Gets the severity. </summary>
        public FhirR4CodeableConcept Severity { get; }
        /// <summary> Gets the code. </summary>
        public FhirR4CodeableConcept Code { get; }
        /// <summary> Gets the body site. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> BodySite { get; }
        /// <summary> Gets the encounter. </summary>
        public FhirR4Reference Encounter { get; }
        /// <summary> Gets the onset date time. </summary>
        public string OnsetDateTime { get; }
        /// <summary> Gets the onset age. </summary>
        public FhirR4Quantity OnsetAge { get; }
        /// <summary> Gets the onset period. </summary>
        public FhirR4Period OnsetPeriod { get; }
        /// <summary> Gets the onset range. </summary>
        public FhirR4Range OnsetRange { get; }
        /// <summary> Gets the onset string. </summary>
        public string OnsetString { get; }
        /// <summary> Gets the abatement date time. </summary>
        public string AbatementDateTime { get; }
        /// <summary> Gets the abatement age. </summary>
        public FhirR4Quantity AbatementAge { get; }
        /// <summary> Gets the abatement period. </summary>
        public FhirR4Period AbatementPeriod { get; }
        /// <summary> Gets the abatement range. </summary>
        public FhirR4Range AbatementRange { get; }
        /// <summary> Gets the abatement string. </summary>
        public string AbatementString { get; }
        /// <summary> Gets the recorded date. </summary>
        public string RecordedDate { get; }
        /// <summary> Gets the stage. </summary>
        public IReadOnlyList<FhirR4ConditionStage> Stage { get; }
        /// <summary> Gets the note. </summary>
        public IReadOnlyList<FhirR4Annotation> Note { get; }
    }
}
