// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The Fhir_R4_SampledData. </summary>
    public partial class FhirR4SampledData : FhirR4Element
    {
        /// <summary> Initializes a new instance of <see cref="FhirR4SampledData"/>. </summary>
        /// <param name="origin"></param>
        /// <param name="period"></param>
        /// <param name="dimensions"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="origin"/> is null. </exception>
        public FhirR4SampledData(FhirR4Quantity origin, double period, int dimensions)
        {
            Argument.AssertNotNull(origin, nameof(origin));

            Origin = origin;
            Period = period;
            Dimensions = dimensions;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4SampledData"/>. </summary>
        /// <param name="id"></param>
        /// <param name="extension"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="origin"></param>
        /// <param name="period"></param>
        /// <param name="factor"></param>
        /// <param name="lowerLimit"></param>
        /// <param name="upperLimit"></param>
        /// <param name="dimensions"></param>
        /// <param name="data"></param>
        internal FhirR4SampledData(string id, IList<FhirR4Extension> extension, IDictionary<string, BinaryData> serializedAdditionalRawData, FhirR4Quantity origin, double period, double? factor, double? lowerLimit, double? upperLimit, int dimensions, string data) : base(id, extension, serializedAdditionalRawData)
        {
            Origin = origin;
            Period = period;
            Factor = factor;
            LowerLimit = lowerLimit;
            UpperLimit = upperLimit;
            Dimensions = dimensions;
            Data = data;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4SampledData"/> for deserialization. </summary>
        internal FhirR4SampledData()
        {
        }

        /// <summary> Gets or sets the origin. </summary>
        public FhirR4Quantity Origin { get; set; }
        /// <summary> Gets or sets the period. </summary>
        public double Period { get; set; }
        /// <summary> Gets or sets the factor. </summary>
        public double? Factor { get; set; }
        /// <summary> Gets or sets the lower limit. </summary>
        public double? LowerLimit { get; set; }
        /// <summary> Gets or sets the upper limit. </summary>
        public double? UpperLimit { get; set; }
        /// <summary> Gets or sets the dimensions. </summary>
        public int Dimensions { get; set; }
        /// <summary> Gets or sets the data. </summary>
        public string Data { get; set; }
    }
}
