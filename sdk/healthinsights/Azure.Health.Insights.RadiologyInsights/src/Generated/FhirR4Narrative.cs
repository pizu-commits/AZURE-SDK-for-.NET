// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The Fhir_R4_Narrative. </summary>
    public partial class FhirR4Narrative : FhirR4Element
    {
        /// <summary> Initializes a new instance of <see cref="FhirR4Narrative"/>. </summary>
        /// <param name="status"></param>
        /// <param name="div"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="status"/> or <paramref name="div"/> is null. </exception>
        internal FhirR4Narrative(string status, string div)
        {
            Argument.AssertNotNull(status, nameof(status));
            Argument.AssertNotNull(div, nameof(div));

            Status = status;
            Div = div;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4Narrative"/>. </summary>
        /// <param name="id"></param>
        /// <param name="extension"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="status"></param>
        /// <param name="div"></param>
        internal FhirR4Narrative(string id, IList<FhirR4Extension> extension, IDictionary<string, BinaryData> serializedAdditionalRawData, string status, string div) : base(id, extension, serializedAdditionalRawData)
        {
            Status = status;
            Div = div;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4Narrative"/> for deserialization. </summary>
        internal FhirR4Narrative()
        {
        }

        /// <summary> Gets the status. </summary>
        public string Status { get; }
        /// <summary> Gets the div. </summary>
        public string Div { get; }
    }
}
