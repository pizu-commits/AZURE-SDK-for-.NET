// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> The Fhir_R4_Observation. </summary>
    public partial class FhirR4Observation : FhirR4DomainResource
    {
        /// <summary> Initializes a new instance of <see cref="FhirR4Observation"/>. </summary>
        /// <param name="status"></param>
        /// <param name="code"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="code"/> is null. </exception>
        internal FhirR4Observation(ObservationStatusCodeType status, FhirR4CodeableConcept code) : base("Observation")
        {
            Argument.AssertNotNull(code, nameof(code));

            Identifier = new ChangeTrackingList<FhirR4Identifier>();
            Status = status;
            Category = new ChangeTrackingList<FhirR4CodeableConcept>();
            Code = code;
            Interpretation = new ChangeTrackingList<FhirR4CodeableConcept>();
            Note = new ChangeTrackingList<FhirR4Annotation>();
            ReferenceRange = new ChangeTrackingList<FhirR4ObservationReferenceRange>();
            HasMember = new ChangeTrackingList<FhirR4Reference>();
            DerivedFrom = new ChangeTrackingList<FhirR4Reference>();
            Component = new ChangeTrackingList<FhirR4ObservationComponent>();
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4Observation"/>. </summary>
        /// <param name="resourceType"></param>
        /// <param name="id"></param>
        /// <param name="meta"></param>
        /// <param name="implicitRules"></param>
        /// <param name="language"></param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="text"></param>
        /// <param name="contained"></param>
        /// <param name="extension"></param>
        /// <param name="modifierExtension"></param>
        /// <param name="identifier"></param>
        /// <param name="status"></param>
        /// <param name="category"></param>
        /// <param name="code"></param>
        /// <param name="subject"></param>
        /// <param name="encounter"></param>
        /// <param name="effectiveDateTime"></param>
        /// <param name="effectivePeriod"></param>
        /// <param name="effectiveInstant"></param>
        /// <param name="issued"></param>
        /// <param name="valueQuantity"></param>
        /// <param name="valueCodeableConcept"></param>
        /// <param name="valueString"></param>
        /// <param name="valueBoolean"></param>
        /// <param name="valueInteger"></param>
        /// <param name="valueRange"></param>
        /// <param name="valueRatio"></param>
        /// <param name="valueSampledData"></param>
        /// <param name="valueTime"></param>
        /// <param name="valueDateTime"></param>
        /// <param name="valuePeriod"></param>
        /// <param name="dataAbsentReason"></param>
        /// <param name="interpretation"></param>
        /// <param name="note"></param>
        /// <param name="bodySite"></param>
        /// <param name="method"></param>
        /// <param name="referenceRange"></param>
        /// <param name="hasMember"></param>
        /// <param name="derivedFrom"></param>
        /// <param name="component"></param>
        internal FhirR4Observation(string resourceType, string id, FhirR4Meta meta, string implicitRules, string language, IDictionary<string, BinaryData> additionalProperties, FhirR4Narrative text, IReadOnlyList<FhirR4Resource> contained, IReadOnlyList<FhirR4Extension> extension, IReadOnlyList<FhirR4Extension> modifierExtension, IReadOnlyList<FhirR4Identifier> identifier, ObservationStatusCodeType status, IReadOnlyList<FhirR4CodeableConcept> category, FhirR4CodeableConcept code, FhirR4Reference subject, FhirR4Reference encounter, string effectiveDateTime, FhirR4Period effectivePeriod, string effectiveInstant, string issued, FhirR4Quantity valueQuantity, FhirR4CodeableConcept valueCodeableConcept, string valueString, bool? valueBoolean, int? valueInteger, FhirR4Range valueRange, FhirR4Ratio valueRatio, FhirR4SampledData valueSampledData, TimeSpan? valueTime, string valueDateTime, FhirR4Period valuePeriod, FhirR4CodeableConcept dataAbsentReason, IReadOnlyList<FhirR4CodeableConcept> interpretation, IReadOnlyList<FhirR4Annotation> note, FhirR4CodeableConcept bodySite, FhirR4CodeableConcept method, IReadOnlyList<FhirR4ObservationReferenceRange> referenceRange, IReadOnlyList<FhirR4Reference> hasMember, IReadOnlyList<FhirR4Reference> derivedFrom, IReadOnlyList<FhirR4ObservationComponent> component) : base(resourceType, id, meta, implicitRules, language, additionalProperties, text, contained, extension, modifierExtension)
        {
            Identifier = identifier;
            Status = status;
            Category = category;
            Code = code;
            Subject = subject;
            Encounter = encounter;
            EffectiveDateTime = effectiveDateTime;
            EffectivePeriod = effectivePeriod;
            EffectiveInstant = effectiveInstant;
            Issued = issued;
            ValueQuantity = valueQuantity;
            ValueCodeableConcept = valueCodeableConcept;
            ValueString = valueString;
            ValueBoolean = valueBoolean;
            ValueInteger = valueInteger;
            ValueRange = valueRange;
            ValueRatio = valueRatio;
            ValueSampledData = valueSampledData;
            ValueTime = valueTime;
            ValueDateTime = valueDateTime;
            ValuePeriod = valuePeriod;
            DataAbsentReason = dataAbsentReason;
            Interpretation = interpretation;
            Note = note;
            BodySite = bodySite;
            Method = method;
            ReferenceRange = referenceRange;
            HasMember = hasMember;
            DerivedFrom = derivedFrom;
            Component = component;
        }

        /// <summary> Initializes a new instance of <see cref="FhirR4Observation"/> for deserialization. </summary>
        internal FhirR4Observation()
        {
        }

        /// <summary> Gets the identifier. </summary>
        public IReadOnlyList<FhirR4Identifier> Identifier { get; }
        /// <summary> Gets the status. </summary>
        public ObservationStatusCodeType Status { get; }
        /// <summary> Gets the category. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> Category { get; }
        /// <summary> Gets the code. </summary>
        public FhirR4CodeableConcept Code { get; }
        /// <summary> Gets the subject. </summary>
        public FhirR4Reference Subject { get; }
        /// <summary> Gets the encounter. </summary>
        public FhirR4Reference Encounter { get; }
        /// <summary> Gets the effective date time. </summary>
        public string EffectiveDateTime { get; }
        /// <summary> Gets the effective period. </summary>
        public FhirR4Period EffectivePeriod { get; }
        /// <summary> Gets the effective instant. </summary>
        public string EffectiveInstant { get; }
        /// <summary> Gets the issued. </summary>
        public string Issued { get; }
        /// <summary> Gets the value quantity. </summary>
        public FhirR4Quantity ValueQuantity { get; }
        /// <summary> Gets the value codeable concept. </summary>
        public FhirR4CodeableConcept ValueCodeableConcept { get; }
        /// <summary> Gets the value string. </summary>
        public string ValueString { get; }
        /// <summary> Gets the value boolean. </summary>
        public bool? ValueBoolean { get; }
        /// <summary> Gets the value integer. </summary>
        public int? ValueInteger { get; }
        /// <summary> Gets the value range. </summary>
        public FhirR4Range ValueRange { get; }
        /// <summary> Gets the value ratio. </summary>
        public FhirR4Ratio ValueRatio { get; }
        /// <summary> Gets the value sampled data. </summary>
        public FhirR4SampledData ValueSampledData { get; }
        /// <summary> Gets the value time. </summary>
        public TimeSpan? ValueTime { get; }
        /// <summary> Gets the value date time. </summary>
        public string ValueDateTime { get; }
        /// <summary> Gets the value period. </summary>
        public FhirR4Period ValuePeriod { get; }
        /// <summary> Gets the data absent reason. </summary>
        public FhirR4CodeableConcept DataAbsentReason { get; }
        /// <summary> Gets the interpretation. </summary>
        public IReadOnlyList<FhirR4CodeableConcept> Interpretation { get; }
        /// <summary> Gets the note. </summary>
        public IReadOnlyList<FhirR4Annotation> Note { get; }
        /// <summary> Gets the body site. </summary>
        public FhirR4CodeableConcept BodySite { get; }
        /// <summary> Gets the method. </summary>
        public FhirR4CodeableConcept Method { get; }
        /// <summary> Gets the reference range. </summary>
        public IReadOnlyList<FhirR4ObservationReferenceRange> ReferenceRange { get; }
        /// <summary> Gets the has member. </summary>
        public IReadOnlyList<FhirR4Reference> HasMember { get; }
        /// <summary> Gets the derived from. </summary>
        public IReadOnlyList<FhirR4Reference> DerivedFrom { get; }
        /// <summary> Gets the component. </summary>
        public IReadOnlyList<FhirR4ObservationComponent> Component { get; }
    }
}
