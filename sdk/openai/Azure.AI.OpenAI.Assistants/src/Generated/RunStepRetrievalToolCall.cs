// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI.Assistants
{
    /// <summary> The RunStepRetrievalToolCall. </summary>
    public partial class RunStepRetrievalToolCall : RunStepToolCall
    {
        /// <summary> Initializes a new instance of <see cref="RunStepRetrievalToolCall"/>. </summary>
        /// <param name="id"></param>
        /// <param name="retrieval"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="retrieval"/> is null. </exception>
        internal RunStepRetrievalToolCall(string id, IReadOnlyDictionary<string, string> retrieval) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(retrieval, nameof(retrieval));

            Type = "retrieval";
            Retrieval = retrieval;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepRetrievalToolCall"/>. </summary>
        /// <param name="type"></param>
        /// <param name="id"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="retrieval"></param>
        internal RunStepRetrievalToolCall(string type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyDictionary<string, string> retrieval) : base(type, id, serializedAdditionalRawData)
        {
            Retrieval = retrieval;
        }

        /// <summary> Initializes a new instance of <see cref="RunStepRetrievalToolCall"/> for deserialization. </summary>
        internal RunStepRetrievalToolCall()
        {
        }

        /// <summary> Gets the retrieval. </summary>
        public IReadOnlyDictionary<string, string> Retrieval { get; }
    }
}
